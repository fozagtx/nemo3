import { useState } from "react";
import { elevenLabsTTS } from "../../utils/ai";

export function VoiceOverNode() {
  const [text, setText] = useState("");
  const [audioUrl, setAudioUrl] = useState<string | null>(null);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const onTTS = async () => {
    setLoading(true);
    setError(null);
    try {
      const url = await elevenLabsTTS(text || "This is a sample voice over generated by nemo3.");
      setAudioUrl(url);
    } catch (e: unknown) {
      setError((e as Error).message);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="px-4 py-3 bg-zinc-900 border border-zinc-800 rounded-lg shadow text-white w-72">
      <div className="font-semibold mb-2">Generate Voice Over</div>
      <textarea
        value={text}
        onChange={(e) => setText(e.target.value)}
        placeholder="Text to speak..."
        className="w-full h-20 text-sm bg-zinc-800 border border-zinc-700 rounded px-2 py-1 mb-2 outline-none resize-none"
      />
      <button
        onClick={onTTS}
        disabled={loading}
        className="text-xs px-2 py-1 rounded bg-yellow-400 text-black disabled:opacity-60"
      >
        {loading ? "Generating..." : "Generate Voice"}
      </button>
      {loading && (
        <div className="mt-2 text-xs text-yellow-400 animate-pulse">Generating audio...</div>
      )}
      {error && <div className="text-xs text-red-400 mt-2">{error}</div>}
      {audioUrl && (
        <audio src={audioUrl} controls className="mt-2 w-full" />
      )}
    </div>
  );
}
